---
openapi: 3.0.0
info:
  title: User Management API
  version: 1.2.0
  description: REST API for managing users and their profiles
  contact:
    name: API Support Team
    email: api-support@myapp.com
    url: https://myapp.com/support
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
servers:
- url: https://api.myapp.com
  description: Production server
- url: https://staging-api.myapp.com
  description: Staging server
- url: http://localhost:3000
  description: Development server
paths:
  "/api/dashboard":
    get:
      summary: Index Api/dashboard
      operationId: api_dashboard_index
      tags:
      - Api
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  total_users:
                    type: integer
                    description: Total number of users
                  total_posts:
                    type: integer
                    description: Total number of posts
                  active_users:
                    type: integer
                    description: Number of active users in last 30 days
                  recent_users:
                    type: object
                    description: List of recent users
                    properties:
                      id:
                        type: integer
                        description: User ID
                      name:
                        type: string
                        description: User name
                      email:
                        type: string
                        description: User email
                    required:
                    - id
                    - name
                    - email
                  recent_posts:
                    type: object
                    description: List of recent posts
                    properties:
                      id:
                        type: integer
                        description: Post ID
                      title:
                        type: string
                        description: Post title
                      created_at:
                        type: string
                        description: Post creation date
                    required:
                    - id
                    - title
                    - created_at
                required:
                - total_users
                - total_posts
                - active_users
                - recent_users
                - recent_posts
  "/api/orders/{id}":
    get:
      summary: Show Api/order
      operationId: api_orders_show
      tags:
      - Api
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: object
                  order_number:
                    type: integer
                  total_amount:
                    type: integer
                  status:
                    type: string
                  placed_at:
                    type: string
                  order_items:
                    type: object
                    properties:
                      items:
                        type: array
                        items:
                          type: object
                          properties:
                            order_item:
                              "$ref": "#/components/schemas/ApiOrdersModelOrderItem"
                          required:
                          - order_item
                    required:
                    - items
                  shipping_address:
                    type: object
                    properties:
                      address:
                        "$ref": "#/components/schemas/ApiUsersModelAddress"
                    required:
                    - address
                  payment_method:
                    type: object
                    properties:
                      payment_method:
                        "$ref": "#/components/schemas/ApiOrdersModelPaymentMethod"
                    required:
                    - payment_method
                required:
                - id
                - order_number
                - total_amount
                - status
                - placed_at
                - order_items
                - shipping_address
                - payment_method
  "/api/posts":
    get:
      summary: Index Api/post
      operationId: api_posts_index
      tags:
      - Api
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      description: Unique post identifier
                    title:
                      type: string
                      description: Post title
                    content:
                      type: string
                      description: Post content/body
                    published:
                      type: boolean
                      description: Whether the post is published
                    created_at:
                      type: string
                      description: Post creation timestamp in ISO 8601 format
                    tags:
                      type: object
                      properties:
                        name:
                          type: integer
                          description: Tag unique identifier
                        color:
                          type: string
                          description: Tag color in hex format
                      required:
                      - name
                      - color
                  required:
                  - id
                  - title
                  - content
                  - published
                  - created_at
                  - tags
  "/api/posts/archive":
    get:
      summary: Archive Api/post
      operationId: api_posts_archive
      tags:
      - Api
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  posts:
                    type: object
                    description: List of posts
                    properties:
                      id:
                        type: integer
                        description: Post ID
                      title:
                        type: string
                        description: Post title
                      content:
                        type: string
                        description: Post content
                      published:
                        type: boolean
                        description: Whether the post is published
                      archived:
                        type: boolean
                        description: Whether the post is archived
                      created_at:
                        type: string
                        description: Post creation timestamp
                        format: date-time
                      status:
                        type: string
                        description: Post status
                        enum:
                        - active
                        - inactive
                    required:
                    - id
                    - title
                    - content
                    - published
                    - created_at
                    - status
                  metadata:
                    type: object
                    description: Response metadata
                    properties:
                      total:
                        type: integer
                        description: Total number of posts
                      fetched_at:
                        type: string
                        description: When the data was fetched
                        format: date-time
                      template_used:
                        type: string
                        description: Template used for rendering
                    required:
                    - total
                    - fetched_at
                    - template_used
                required:
                - posts
                - metadata
  "/api/posts/{id}":
    get:
      summary: Show Api/post
      operationId: api_posts_show
      tags:
      - Api
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  post:
                    "$ref": "#/components/schemas/ApiPostsPost"
                  author:
                    type: object
                    properties:
                      user:
                        "$ref": "#/components/schemas/ApiUsersUser"
                    required:
                    - user
                  tags:
                    type: array
                    description: Post tags for categorization
                  comments_count:
                    type: integer
                    description: Total number of comments
                  likes_count:
                    type: integer
                    description: Total number of likes
                  published_at:
                    type: string
                    description: Publication timestamp
                required:
                - post
                - author
                - tags
                - comments_count
                - likes_count
  "/api/posts/{post_id}/comments":
    get:
      summary: Index Api/comment
      operationId: api_comments_index
      tags:
      - Api
      parameters:
      - name: post_id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      description: Unique comment identifier
                    content:
                      type: string
                      description: Comment content
                    author:
                      type: string
                      description: Comment author name
                    created_at:
                      type: string
                      description: Comment creation timestamp
                    likes:
                      type: integer
                      description: Number of likes on this comment
                  required:
                  - id
                  - content
                  - author
                  - created_at
                  - likes
  "/api/users/{user_id}/orders":
    get:
      summary: Index Api/users/order
      operationId: api_users_orders_index
      tags:
      - Api
      parameters:
      - name: user_id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    order:
                      "$ref": "#/components/schemas/ApiUsersModelOrder"
                  required:
                  - order
  "/api/users/{user_id}/posts":
    get:
      summary: Index Api/post
      operationId: api_posts_index
      tags:
      - Api
      parameters:
      - name: user_id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      description: Unique post identifier
                    title:
                      type: string
                      description: Post title
                    content:
                      type: string
                      description: Post content/body
                    published:
                      type: boolean
                      description: Whether the post is published
                    created_at:
                      type: string
                      description: Post creation timestamp in ISO 8601 format
                    tags:
                      type: object
                      properties:
                        name:
                          type: integer
                          description: Tag unique identifier
                        color:
                          type: string
                          description: Tag color in hex format
                      required:
                      - name
                      - color
                  required:
                  - id
                  - title
                  - content
                  - published
                  - created_at
                  - tags
    post:
      summary: Create Api/post
      operationId: api_posts_create
      tags:
      - Api
      parameters:
      - name: user_id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  post_id:
                    type: integer
                  created_at:
                    type: string
                required:
                - success
                - message
                - post_id
                - created_at
  "/api/users/{user_id}/posts/{id}":
    get:
      summary: Show Api/post
      operationId: api_posts_show
      tags:
      - Api
      parameters:
      - name: user_id
        in: path
        required: true
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  post:
                    "$ref": "#/components/schemas/ApiPostsPost"
                  author:
                    type: object
                    properties:
                      user:
                        "$ref": "#/components/schemas/ApiUsersUser"
                    required:
                    - user
                  tags:
                    type: array
                    description: Post tags for categorization
                  comments_count:
                    type: integer
                    description: Total number of comments
                  likes_count:
                    type: integer
                    description: Total number of likes
                  published_at:
                    type: string
                    description: Publication timestamp
                required:
                - post
                - author
                - tags
                - comments_count
                - likes_count
components:
  schemas:
    ApiPostsPost:
      "$ref": "./components/schemas/api-posts-post.yaml"
    ApiUsersUser:
      "$ref": "./components/schemas/api-users-user.yaml"
    ApiUsersModelOrder:
      "$ref": "./components/schemas/api-users-model-order.yaml"
    ApiOrdersModelOrderItem:
      "$ref": "./components/schemas/api-orders-model-order-item.yaml"
    ApiUsersModelAddress:
      "$ref": "./components/schemas/api-users-model-address.yaml"
    ApiOrdersModelPaymentMethod:
      "$ref": "./components/schemas/api-orders-model-payment-method.yaml"
