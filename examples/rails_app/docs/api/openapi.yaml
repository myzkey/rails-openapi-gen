---
openapi: 3.0.0
info:
  title: User Management API
  version: 1.2.0
  description: REST API for managing users and their profiles
  contact:
    name: API Support Team
    email: api-support@myapp.com
    url: https://myapp.com/support
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
servers:
- url: https://api.myapp.com
  description: Production server
- url: https://staging-api.myapp.com
  description: Staging server
- url: http://localhost:3000
  description: Development server
paths:
  "/posts/{post_id}/comments":
    get:
      summary: Index Comment
      operationId: comments_index
      tags:
      - Comments
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  array!:
                    type: string
                    description: 'TODO: MISSING COMMENT - Add @openapi comment'
                  id:
                    type: integer
                    description: Unique comment identifier
                  content:
                    type: string
                    description: Comment content
                  author:
                    type: string
                    description: Comment author name
                  created_at:
                    type: string
                    description: Comment creation timestamp
                  likes:
                    type: integer
                    description: Number of likes on this comment
                required:
                - id
                - content
                - author
                - created_at
  "/posts":
    get:
      summary: Index Post
      operationId: posts_index
      tags:
      - Posts
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  array!:
                    type: string
                    description: 'TODO: MISSING COMMENT - Add @openapi comment'
                  id:
                    type: integer
                    description: Unique post identifier
                  title:
                    type: string
                    description: Post title
                  content:
                    type: string
                    description: Post content/body
                  published:
                    type: boolean
                    description: Whether the post is published
                  created_at:
                    type: string
                    description: Post creation timestamp in ISO 8601 format
                  tags:
                    type: array
                    description: Array of tag strings associated with the post
                required:
                - id
                - title
                - content
                - published
                - created_at
  "/posts/{id}":
    get:
      summary: Show Post
      operationId: posts_show
      tags:
      - Posts
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    description: Unique post identifier
                  title:
                    type: string
                    description: Post title
                  content:
                    type: string
                    description: Full post content/body
                  published:
                    type: boolean
                    description: Publication status
                  created_at:
                    type: string
                    description: Post creation timestamp
                  updated_at:
                    type: string
                    description: Last update timestamp
                  author:
                    type: object
                    description: Nested object
                  tags:
                    type: array
                    description: Post tags for categorization
                  comments_count:
                    type: integer
                    description: Total number of comments
                  likes_count:
                    type: integer
                    description: Total number of likes
                  published_at:
                    type: string
                    description: Publication timestamp
                required:
                - id
                - title
                - content
                - published
                - created_at
  "/users/{user_id}/posts":
    get:
      summary: Index Post
      operationId: posts_index
      tags:
      - Posts
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  array!:
                    type: string
                    description: 'TODO: MISSING COMMENT - Add @openapi comment'
                  id:
                    type: integer
                    description: Unique post identifier
                  title:
                    type: string
                    description: Post title
                  content:
                    type: string
                    description: Post content/body
                  published:
                    type: boolean
                    description: Whether the post is published
                  created_at:
                    type: string
                    description: Post creation timestamp in ISO 8601 format
                  tags:
                    type: array
                    description: Array of tag strings associated with the post
                required:
                - id
                - title
                - content
                - published
                - created_at
    post:
      summary: Create Post
      operationId: posts_create
      tags:
      - Posts
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Operation success status
                  message:
                    type: string
                    description: Success message
                  post_id:
                    type: integer
                    description: ID of the newly created post
                  created_at:
                    type: string
                    description: Creation timestamp
                required:
                - success
                - message
                - post_id
                - created_at
  "/users/{user_id}/posts/{id}":
    get:
      summary: Show Post
      operationId: posts_show
      tags:
      - Posts
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    description: Unique post identifier
                  title:
                    type: string
                    description: Post title
                  content:
                    type: string
                    description: Full post content/body
                  published:
                    type: boolean
                    description: Publication status
                  created_at:
                    type: string
                    description: Post creation timestamp
                  updated_at:
                    type: string
                    description: Last update timestamp
                  author:
                    type: object
                    description: Nested object
                  tags:
                    type: array
                    description: Post tags for categorization
                  comments_count:
                    type: integer
                    description: Total number of comments
                  likes_count:
                    type: integer
                    description: Total number of likes
                  published_at:
                    type: string
                    description: Publication timestamp
                required:
                - id
                - title
                - content
                - published
                - created_at
  "/users":
    get:
      summary: Index User
      operationId: users_index
      tags:
      - Users
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  array!:
                    type: string
                    description: 'TODO: MISSING COMMENT - Add @openapi comment'
                  id:
                    type: integer
                    description: Unique user identifier
                  email:
                    type: string
                    description: User email address
                  name:
                    type: string
                    description: Full name of the user
                  status:
                    type: string
                    description: Current user status
                    enum:
                    - active
                    - inactive
                    - suspended
                required:
                - id
                - email
                - name
  "/users/{id}":
    get:
      summary: Show User
      operationId: users_show
      tags:
      - Users
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    description: Unique user identifier
                  email:
                    type: string
                    description: User email address
                  name:
                    type: string
                    description: Full name of the user
                  status:
                    type: string
                    description: Current user status
                    enum:
                    - active
                    - inactive
                    - suspended
                  created_at:
                    type: string
                    description: Account creation timestamp in ISO 8601 format
                  role:
                    type: string
                    description: User role in the system
                    enum:
                    - admin
                    - moderator
                    - user
                  profile:
                    type: object
                    description: Nested object
                  posts:
                    type: object
                    description: Nested object
                  metadata:
                    type: object
                    description: Nested object
                required:
                - id
                - email
                - name
